#! /usr/bin/env python3
#
#  ldapuseradd - Add new LDAP users.
#
#  (C) 2018 Richard Neumann <mail at richard dash neumann period de>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################
"""useradd.

    Add new LDAP users.

Usage:
    ldapuseradd <dn> <user> [options]

Options:
    --passwd=<passwd>, -P   Sets the user's password.
    --uid=<uid>, -u         Sets the user's UID.
    --gid=<gid>, -g         Sets the user's GID.
    --shell=<shell>, -s     Sets the user's logn shell.
    --home=<home>, -d       Sets the user's home directory.
    --name=<name>, -n       Sets the user's full name.
    --title=<title>, -t     Sets the user's title.
    --phone=<phone>, -p     Sets the user's phone number.
    --mobile=<mobile>, -m   Sets the user's mobile phone number.
"""
from sys import stderr, exit as exit_

from ldaptools import BASH, get_uid, get_gid, LDAPAdmin


def main(options):
    """Adds LDAP users."""

    distinguished_name = options['<dn>']
    user = options['<user>']
    passwd = options['--passwd']
    uid = options['--uid'] or get_uid()
    gid = options['--gid'] or get_gid()
    shell = options['--shell'] or BASH
    home = options['--home']
    name = options['--name']
    title = options['--title']
    phone = options['--phone']
    mobile = options['--mobile']
    admin = LDAPAdmin.from_string(distinguished_name)
    admin.useradd(
        user, passwd, uid=uid, gid=gid, shell=shell, home=home, name=name,
        title=title, phone=phone, mobile=mobile)

    return 0


if __name__ == '__main__':
    try:
        from docopt import docopt
    except ImportError:
        print('docopt not installed. CLI not available.', file=stderr)
        exit_(4)

    exit_(main(docopt(__doc__))
