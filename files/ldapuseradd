#! /usr/bin/env python3
#
#  ldapuseradd - Add new LDAP users.
#
#  (C) 2018 Richard Neumann <mail at richard dash neumann period de>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################
"""useradd.

    Add new LDAP users.

Usage:
    ldapuser add <user_name> <first_name> <last_name> [options]
    ldapuser modify <user_name> [<first_name> <last_name>] [options]

Options:
    --passwd=<passwd>, -p   Sets the user's password.
    --uid=<uid>, -u         Sets the user's UID.
    --gid=<gid>, -g         Sets the user's GID.
    --shell=<shell>, -s     Sets the user's logn shell.
    --home=<home>, -d       Sets the user's home directory.
    --ou=<ou>               Sets the organizational unit.
    --domain=<domain>       Sets the LDAP domain.
    --help, -h              Shows this page.
"""
from sys import exit, stderr

from ldaptools.user import add, modify


def add(options):
    """Adds an LDAP user."""

    user_name = options['<user_name>']
    first_name = options['<first_name>']
    last_name = options['<last_name>']
    uid = options['--uid']
    gid = options['--gid']
    shell = options['--shell']
    home = options['--home']
    ou = options['--ou']
    domain = options['--domain']

    if options['--passwd']:
        passwd = options['--passwd']
    else:
        passwd = genpw()
        print('Generated password:', passwd)

    ldif = add(
        user_name, first_name, last_name, passwd=passwd, uid=uid, gid=gid,
        home=home, shell=shell, ou=ou, domain=domain)
    cn = DomainComponent.for_user(user_name, domain, ou=ou, cn_key='cn')
    ldapadd(cn, ldif)


def modify(options):
    """Modifies an LDAP user."""

    user_name = options['<user_name>']
    first_name = options['<first_name>']
    last_name = options['<last_name>']
    passwd = options['--passwd']
    uid = options['--uid']
    gid = options['--gid']
    shell = options['--shell']
    home = options['--home']
    ou = options['--ou']
    domain = options['--domain']

    ldif = modify(
        user_name, first_name, last_name, passwd=passwd, uid=uid, gid=gid,
        home=home, shell=shell, ou=ou, domain=domain)
    cn = DomainComponent.for_user(user_name, domain, ou=ou, cn_key='cn')
    ldapadd(cn, ldif)


def main(options):
    """Main function."""

    if options['add']:
        add(options)
    elif options['modify']:
        modify(options)


if __name__ == '__main__':
    try:
        from docopt import docopt
    except ImportError:
        print('docopt not installed. CLI not available.', file=stderr)
        exit(4)

    main(docopt(__doc__)
